{"ast":null,"code":"var _jsxFileName = \"/Users/kartikkumar/Documents/GitHub/arc-tutoring/src/components/Student-Info.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class StudentInfo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.calculateTime = () => {\n      const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n      var goalDateMonth = monthNames.indexOf(this.state.month) + 1;\n      var currentdate = new Date();\n      var goalDate = goalDateMonth + \"/\" + this.state.selectedDayofMonth + \"/\" + currentdate.getFullYear();\n      var date1 = new Date(goalDate);\n      console.log((date1.getTime() - currentdate.getTime()) / 1000);\n\n      if (date1.getTime() > currentdate.getTime()) {\n        var Difference_In_Time = (date1.getTime() - currentdate.getTime()) / 1000;\n      }\n\n      var time_remaining = \"\";\n      var hours = \"\";\n      var minutes = \"\";\n      var seconds = \"\";\n\n      if (Difference_In_Time >= 86400) {\n        time_remaining = Math.ceil(Difference_In_Time / 86400) + \" Days\";\n      } else {\n        hours = Difference_In_Time / 3600 + \"h\";\n        Difference_In_Time = Difference_In_Time % 3600;\n        minutes = Difference_In_Time / 60 + \"m\";\n        seconds = Difference_In_Time % 60 + \"s\";\n        time_remaining = hours + \":\" + minutes + \":\" + seconds;\n      } // var days = \"5\";\n      // setState update\n      // document.getElementById(\"days\").innerHTML = days + \"d \"\n      // document.getElementById(\"hours\").innerHTML = hours + \"h \" \n      // document.getElementById(\"mins\").innerHTML = minutes + \"m \" \n      // document.getElementById(\"secs\").innerHTML = seconds + \"s \" \n\n\n      return time_remaining;\n    };\n\n    this.state = {\n      studentName: 'Kartik',\n      day: 'Wed',\n      // Mon, Tue, Wed\n      month: 'August',\n      // Jan, Feb\n      selectedDayofMonth: '30',\n      // 15th, 16th so on\n      startTime: '4:00pm',\n      endTime: '5:00pm',\n      lessonName: 'Mathematical Methods',\n      tutorName: 'Steve',\n      timeLeft: '0'\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"oval-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Your Next Lesson is in \", this.calculateTime()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"student-info-circle\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sideline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"details border-right-div\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bold-font\",\n            children: \" Student \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 20\n          }, this), \" \", this.state.studentName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"details border-right-div\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bold-font\",\n              children: [this.state.day, \",\\xA0\", this.state.month, \"\\xA0\", this.state.selectedDayofMonth, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 22\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [this.state.startTime, \" - \", this.state.endTime]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"details\",\n          children: [this.state.lessonName, \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 45\n          }, this), \" with  \", this.state.tutorName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-btn-cnt\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-btn btn-primary\",\n          children: \"Add Enrolment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  }\n\n  componentDidMount() {\n    this.myInterval = setInterval(1000);\n  }\n\n}","map":{"version":3,"sources":["/Users/kartikkumar/Documents/GitHub/arc-tutoring/src/components/Student-Info.js"],"names":["React","Component","StudentInfo","constructor","props","calculateTime","monthNames","goalDateMonth","indexOf","state","month","currentdate","Date","goalDate","selectedDayofMonth","getFullYear","date1","console","log","getTime","Difference_In_Time","time_remaining","hours","minutes","seconds","Math","ceil","studentName","day","startTime","endTime","lessonName","tutorName","timeLeft","render","componentDidMount","myInterval","setInterval"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nexport default class StudentInfo extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            studentName: 'Kartik',\n            day: 'Wed', // Mon, Tue, Wed\n            month: 'August', // Jan, Feb\n            selectedDayofMonth: '30', // 15th, 16th so on\n            startTime: '4:00pm',\n            endTime: '5:00pm',\n            lessonName: 'Mathematical Methods',\n            tutorName: 'Steve',\n            timeLeft: '0'\n        }\n    }\n    \n    render() {\n        return (\n            <div className=\"oval-container\">\n                <div>\n                    <h3>Your Next Lesson is in {this.calculateTime()}</h3> \n                </div>\n                <div className=\"student-info-circle\">\n                    <div className=\"sideline\"></div>\n                <div className=\"details border-right-div\">\n                   <div className=\"bold-font\"> Student </div> {this.state.studentName}\n                </div>\n                 <div className=\"details border-right-div\">\n                     <div>\n                     <div className=\"bold-font\">\n                    {this.state.day},&nbsp;\n                    {this.state.month}&nbsp;\n                    {this.state.selectedDayofMonth} </div>\n                     </div>\n                     <div>\n                         {this.state.startTime} - {this.state.endTime}\n                     </div>\n                </div>\n                <div className=\"details\">\n                   {this.state.lessonName}  <br/> with  {this.state.tutorName}\n                </div>\n            </div>\n            <div className=\"add-btn-cnt\">\n                <button className=\"add-btn btn-primary\">Add Enrolment</button>\n            </div>\n            </div>\n        )\n    }\n    componentDidMount() {\n        this.myInterval = setInterval(1000);\n    }\n    calculateTime = () =>{\n        const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n    ];\n   \n    \n    var goalDateMonth = monthNames.indexOf(this.state.month) + 1 ;\n    var currentdate = new Date();\n    var goalDate =  goalDateMonth+\"/\"+this.state.selectedDayofMonth +\"/\"+ currentdate.getFullYear();\n    var date1 = new Date(goalDate);\n       \n    console.log((date1.getTime() - currentdate.getTime())/1000);\n        if(date1.getTime() > currentdate.getTime())\n        {\n        var Difference_In_Time = (date1.getTime() - currentdate.getTime())/1000;\n        }\n        var time_remaining=\"\";\n        var hours=\"\";\n        var minutes=\"\";\n        var seconds=\"\";\n        if( Difference_In_Time >= 86400)\n        {\n            time_remaining = (Math.ceil(Difference_In_Time / 86400)) + \" Days\";\n        }\n   \n        else\n        {\n            \n                hours = (Difference_In_Time/3600)+\"h\";\n                Difference_In_Time = Difference_In_Time % 3600;\n                minutes = (Difference_In_Time/60)+\"m\";\n                seconds = Difference_In_Time%60 + \"s\";\n                time_remaining = hours + \":\" + minutes + \":\" + seconds;\n            \n        }\n        // var days = \"5\";\n        // setState update\n        // document.getElementById(\"days\").innerHTML = days + \"d \"\n        // document.getElementById(\"hours\").innerHTML = hours + \"h \" \n        // document.getElementById(\"mins\").innerHTML = minutes + \"m \" \n        // document.getElementById(\"secs\").innerHTML = seconds + \"s \" \n\n        return time_remaining;\n        \n    }\n}\n"]},"metadata":{},"sourceType":"module"}